{"ast":null,"code":"import * as actions from './cartActionType';\nlet initialState = [];\nexport const saveState = state => {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem('state', serializedState);\n  } catch {// ignore write errors\n  }\n};\n\nconst cartReducer = (state = initialState, action) => {\n  saveState(state);\n\n  switch (action.type) {\n    case actions.ADD_CART:\n      return [...state, action.payload];\n\n    case actions.REMOVE_CART:\n      let tempState = state.filter(item => item.itemId !== action.payload);\n      return tempState;\n\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;","map":{"version":3,"sources":["C:/Users/takat/Desktop/CodingProjects/online-store/src/redux/cart/cartReducer.js"],"names":["actions","initialState","saveState","state","serializedState","JSON","stringify","localStorage","setItem","cartReducer","action","type","ADD_CART","payload","REMOVE_CART","tempState","filter","item","itemId"],"mappings":"AAAA,OAAO,KAAKA,OAAZ,MAAyB,kBAAzB;AAEA,IAAIC,YAAY,GAAC,EAAjB;AAGA,OAAO,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAChC,MAAI;AACF,UAAMC,eAAe,GAAGC,IAAI,CAACC,SAAL,CAAeH,KAAf,CAAxB;AACAI,IAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BJ,eAA9B;AACD,GAHD,CAGE,MAAM,CACN;AACD;AACF,CAPI;;AAUP,MAAMK,WAAW,GAAG,CAACN,KAAK,GAACF,YAAP,EAAqBS,MAArB,KAA8B;AAC9CR,EAAAA,SAAS,CAACC,KAAD,CAAT;;AACA,UAAOO,MAAM,CAACC,IAAd;AACI,SAAKX,OAAO,CAACY,QAAb;AACI,aAAQ,CAAC,GAAGT,KAAJ,EAAWO,MAAM,CAACG,OAAlB,CAAR;;AACJ,SAAKb,OAAO,CAACc,WAAb;AACE,UAAIC,SAAS,GAAGZ,KAAK,CAACa,MAAN,CAAaC,IAAI,IAAEA,IAAI,CAACC,MAAL,KAAcR,MAAM,CAACG,OAAxC,CAAhB;AACE,aAAOE,SAAP;;AACJ;AACI,aAAOZ,KAAP;AAPR;AASH,CAXD;;AAaA,eAAeM,WAAf","sourcesContent":["import * as actions from './cartActionType'\r\n\r\nlet initialState=[];\r\n\r\n\r\nexport const saveState = (state) => {\r\n    try {\r\n      const serializedState = JSON.stringify(state);\r\n      localStorage.setItem('state', serializedState);\r\n    } catch {\r\n      // ignore write errors\r\n    }\r\n  };\r\n\r\n\r\nconst cartReducer = (state=initialState, action)=>{\r\n    saveState(state);\r\n    switch(action.type){\r\n        case actions.ADD_CART:\r\n            return  [...state, action.payload]\r\n        case actions.REMOVE_CART:\r\n          let tempState = state.filter(item=>item.itemId!==action.payload);\r\n            return tempState;\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default cartReducer"]},"metadata":{},"sourceType":"module"}